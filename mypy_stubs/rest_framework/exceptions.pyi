from rest_framework import status as status
from rest_framework.utils.serializer_helpers import ReturnDict as ReturnDict, ReturnList as ReturnList
from typing import Any, Optional

class ErrorDetail(str):
    code: Any = ...
    def __new__(cls, string: Any, code: Optional[Any] = ...): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...

class APIException(Exception):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...
    detail: Any = ...
    def __init__(self, detail: Optional[Any] = ..., code: Optional[Any] = ...) -> None: ...
    def get_codes(self): ...
    def get_full_details(self): ...

class ValidationError(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...
    detail: Any = ...
    def __init__(self, detail: Optional[Any] = ..., code: Optional[Any] = ...) -> None: ...

class ParseError(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...

class AuthenticationFailed(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...

class NotAuthenticated(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...

class PermissionDenied(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...

class NotFound(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...

class MethodNotAllowed(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...
    def __init__(self, method: Any, detail: Optional[Any] = ..., code: Optional[Any] = ...) -> None: ...

class NotAcceptable(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...
    available_renderers: Any = ...
    def __init__(self, detail: Optional[Any] = ..., code: Optional[Any] = ..., available_renderers: Optional[Any] = ...) -> None: ...

class UnsupportedMediaType(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    default_code: str = ...
    def __init__(self, media_type: Any, detail: Optional[Any] = ..., code: Optional[Any] = ...) -> None: ...

class Throttled(APIException):
    status_code: Any = ...
    default_detail: Any = ...
    extra_detail_singular: Any = ...
    extra_detail_plural: Any = ...
    default_code: str = ...
    wait: Any = ...
    def __init__(self, wait: Optional[Any] = ..., detail: Optional[Any] = ..., code: Optional[Any] = ...) -> None: ...

def server_error(request: Any, *args: Any, **kwargs: Any): ...
def bad_request(request: Any, exception: Any, *args: Any, **kwargs: Any): ...
