from django.views.generic import View
from rest_framework import exceptions as exceptions, status as status
from rest_framework.request import Request as Request
from rest_framework.response import Response as Response
from rest_framework.schemas import DefaultSchema as DefaultSchema
from rest_framework.settings import api_settings as api_settings
from rest_framework.utils import formatting as formatting
from typing import Any, Optional

def get_view_name(view: Any): ...
def get_view_description(view: Any, html: bool = ...): ...
def set_rollback() -> None: ...
def exception_handler(exc: Any, context: Any): ...

class APIView(View):
    renderer_classes: Any = ...
    parser_classes: Any = ...
    authentication_classes: Any = ...
    throttle_classes: Any = ...
    permission_classes: Any = ...
    content_negotiation_class: Any = ...
    metadata_class: Any = ...
    versioning_class: Any = ...
    settings: Any = ...
    schema: Any = ...
    @classmethod
    def as_view(cls, **initkwargs: Any): ...
    @property
    def allowed_methods(self): ...
    @property
    def default_response_headers(self): ...
    def http_method_not_allowed(self, request: Any, *args: Any, **kwargs: Any) -> None: ...
    def permission_denied(self, request: Any, message: Optional[Any] = ...) -> None: ...
    def throttled(self, request: Any, wait: Any) -> None: ...
    def get_authenticate_header(self, request: Any): ...
    def get_parser_context(self, http_request: Any): ...
    def get_renderer_context(self): ...
    def get_exception_handler_context(self): ...
    def get_view_name(self): ...
    def get_view_description(self, html: bool = ...): ...
    def get_format_suffix(self, **kwargs: Any): ...
    def get_renderers(self): ...
    def get_parsers(self): ...
    def get_authenticators(self): ...
    def get_permissions(self): ...
    def get_throttles(self): ...
    def get_content_negotiator(self): ...
    def get_exception_handler(self): ...
    def perform_content_negotiation(self, request: Any, force: bool = ...): ...
    def perform_authentication(self, request: Any) -> None: ...
    def check_permissions(self, request: Any) -> None: ...
    def check_object_permissions(self, request: Any, obj: Any) -> None: ...
    def check_throttles(self, request: Any) -> None: ...
    def determine_version(self, request: Any, *args: Any, **kwargs: Any): ...
    def initialize_request(self, request: Any, *args: Any, **kwargs: Any): ...
    format_kwarg: Any = ...
    def initial(self, request: Any, *args: Any, **kwargs: Any) -> None: ...
    def finalize_response(self, request: Any, response: Any, *args: Any, **kwargs: Any): ...
    def handle_exception(self, exc: Any): ...
    def raise_uncaught_exception(self, exc: Any) -> None: ...
    args: Any = ...
    kwargs: Any = ...
    request: Any = ...
    headers: Any = ...
    response: Any = ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...
    def options(self, request: Any, *args: Any, **kwargs: Any): ...
