from collections import OrderedDict
from collections.abc import MutableMapping
from rest_framework.utils import json as json
from typing import Any

class ReturnDict(OrderedDict):
    serializer: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def copy(self): ...
    def __reduce__(self): ...

class ReturnList(list):
    serializer: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __reduce__(self): ...

class BoundField:
    value: Any = ...
    errors: Any = ...
    name: Any = ...
    def __init__(self, field: Any, value: Any, errors: Any, prefix: str = ...) -> None: ...
    def __getattr__(self, attr_name: Any): ...
    def as_form_field(self): ...

class JSONBoundField(BoundField):
    def as_form_field(self): ...

class NestedBoundField(BoundField):
    def __init__(self, field: Any, value: Any, errors: Any, prefix: str = ...) -> None: ...
    def __iter__(self) -> Any: ...
    def __getitem__(self, key: Any): ...
    def as_form_field(self): ...

class BindingDict(MutableMapping):
    serializer: Any = ...
    fields: Any = ...
    def __init__(self, serializer: Any) -> None: ...
    def __setitem__(self, key: Any, field: Any) -> None: ...
    def __getitem__(self, key: Any): ...
    def __delitem__(self, key: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
