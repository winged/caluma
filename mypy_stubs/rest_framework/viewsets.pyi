from rest_framework import generics as generics, mixins as mixins, views as views
from rest_framework.reverse import reverse as reverse
from typing import Any, Optional

class ViewSetMixin:
    action_map: Any = ...
    head: Any = ...
    request: Any = ...
    args: Any = ...
    kwargs: Any = ...
    def as_view(cls, actions: Optional[Any] = ..., **initkwargs: Any): ...
    action: str = ...
    def initialize_request(self, request: Any, *args: Any, **kwargs: Any): ...
    def reverse_action(self, url_name: Any, *args: Any, **kwargs: Any): ...
    @classmethod
    def get_extra_actions(cls): ...
    def get_extra_action_url_map(self): ...

class ViewSet(ViewSetMixin, views.APIView): ...
class GenericViewSet(ViewSetMixin, generics.GenericAPIView): ...
class ReadOnlyModelViewSet(mixins.RetrieveModelMixin, mixins.ListModelMixin, GenericViewSet): ...
class ModelViewSet(mixins.CreateModelMixin, mixins.RetrieveModelMixin, mixins.UpdateModelMixin, mixins.DestroyModelMixin, mixins.ListModelMixin, GenericViewSet): ...
