from rest_framework.settings import api_settings as api_settings
from typing import Any

class BaseThrottle:
    def allow_request(self, request: Any, view: Any) -> None: ...
    def get_ident(self, request: Any): ...
    def wait(self) -> None: ...

class SimpleRateThrottle(BaseThrottle):
    cache: Any = ...
    timer: Any = ...
    cache_format: str = ...
    scope: Any = ...
    THROTTLE_RATES: Any = ...
    rate: Any = ...
    def __init__(self) -> None: ...
    def get_cache_key(self, request: Any, view: Any) -> None: ...
    def get_rate(self): ...
    def parse_rate(self, rate: Any): ...
    key: Any = ...
    history: Any = ...
    now: Any = ...
    def allow_request(self, request: Any, view: Any): ...
    def throttle_success(self): ...
    def throttle_failure(self): ...
    def wait(self): ...

class AnonRateThrottle(SimpleRateThrottle):
    scope: str = ...
    def get_cache_key(self, request: Any, view: Any): ...

class UserRateThrottle(SimpleRateThrottle):
    scope: str = ...
    def get_cache_key(self, request: Any, view: Any): ...

class ScopedRateThrottle(SimpleRateThrottle):
    scope_attr: str = ...
    def __init__(self) -> None: ...
    scope: Any = ...
    rate: Any = ...
    def allow_request(self, request: Any, view: Any): ...
    def get_cache_key(self, request: Any, view: Any): ...
