from rest_framework import mixins as mixins, views as views
from rest_framework.settings import api_settings as api_settings
from typing import Any

def get_object_or_404(queryset: Any, *filter_args: Any, **filter_kwargs: Any): ...

class GenericAPIView(views.APIView):
    queryset: Any = ...
    serializer_class: Any = ...
    lookup_field: str = ...
    lookup_url_kwarg: Any = ...
    filter_backends: Any = ...
    pagination_class: Any = ...
    def get_queryset(self): ...
    def get_object(self): ...
    def get_serializer(self, *args: Any, **kwargs: Any): ...
    def get_serializer_class(self): ...
    def get_serializer_context(self): ...
    def filter_queryset(self, queryset: Any): ...
    @property
    def paginator(self): ...
    def paginate_queryset(self, queryset: Any): ...
    def get_paginated_response(self, data: Any): ...

class CreateAPIView(mixins.CreateModelMixin, GenericAPIView):
    def post(self, request: Any, *args: Any, **kwargs: Any): ...

class ListAPIView(mixins.ListModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...

class RetrieveAPIView(mixins.RetrieveModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...

class DestroyAPIView(mixins.DestroyModelMixin, GenericAPIView):
    def delete(self, request: Any, *args: Any, **kwargs: Any): ...

class UpdateAPIView(mixins.UpdateModelMixin, GenericAPIView):
    def put(self, request: Any, *args: Any, **kwargs: Any): ...
    def patch(self, request: Any, *args: Any, **kwargs: Any): ...

class ListCreateAPIView(mixins.ListModelMixin, mixins.CreateModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...
    def post(self, request: Any, *args: Any, **kwargs: Any): ...

class RetrieveUpdateAPIView(mixins.RetrieveModelMixin, mixins.UpdateModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...
    def put(self, request: Any, *args: Any, **kwargs: Any): ...
    def patch(self, request: Any, *args: Any, **kwargs: Any): ...

class RetrieveDestroyAPIView(mixins.RetrieveModelMixin, mixins.DestroyModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...
    def delete(self, request: Any, *args: Any, **kwargs: Any): ...

class RetrieveUpdateDestroyAPIView(mixins.RetrieveModelMixin, mixins.UpdateModelMixin, mixins.DestroyModelMixin, GenericAPIView):
    def get(self, request: Any, *args: Any, **kwargs: Any): ...
    def put(self, request: Any, *args: Any, **kwargs: Any): ...
    def patch(self, request: Any, *args: Any, **kwargs: Any): ...
    def delete(self, request: Any, *args: Any, **kwargs: Any): ...
