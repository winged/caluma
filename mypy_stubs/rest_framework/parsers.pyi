from rest_framework import renderers as renderers
from rest_framework.exceptions import ParseError as ParseError
from rest_framework.settings import api_settings as api_settings
from rest_framework.utils import json as json
from typing import Any, Optional

class DataAndFiles:
    data: Any = ...
    files: Any = ...
    def __init__(self, data: Any, files: Any) -> None: ...

class BaseParser:
    media_type: Any = ...
    def parse(self, stream: Any, media_type: Optional[Any] = ..., parser_context: Optional[Any] = ...) -> None: ...

class JSONParser(BaseParser):
    media_type: str = ...
    renderer_class: Any = ...
    strict: Any = ...
    def parse(self, stream: Any, media_type: Optional[Any] = ..., parser_context: Optional[Any] = ...): ...

class FormParser(BaseParser):
    media_type: str = ...
    def parse(self, stream: Any, media_type: Optional[Any] = ..., parser_context: Optional[Any] = ...): ...

class MultiPartParser(BaseParser):
    media_type: str = ...
    def parse(self, stream: Any, media_type: Optional[Any] = ..., parser_context: Optional[Any] = ...): ...

class FileUploadParser(BaseParser):
    media_type: str = ...
    errors: Any = ...
    def parse(self, stream: Any, media_type: Optional[Any] = ..., parser_context: Optional[Any] = ...): ...
    def get_filename(self, stream: Any, media_type: Any, parser_context: Any): ...
    def get_encoded_filename(self, filename_parm: Any): ...
