from ..fields import DjangoConnectionField as DjangoConnectionField
from .utils import get_filtering_args_from_filterset as get_filtering_args_from_filterset, get_filterset_class as get_filterset_class
from typing import Any, Optional

class DjangoFilterConnectionField(DjangoConnectionField):
    def __init__(self, type: Any, fields: Optional[Any] = ..., order_by: Optional[Any] = ..., extra_filter_meta: Optional[Any] = ..., filterset_class: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...
    @property
    def args(self): ...
    @args.setter
    def args(self, args: Any) -> None: ...
    @property
    def filterset_class(self): ...
    @property
    def filtering_args(self): ...
    @classmethod
    def resolve_queryset(cls, connection: Any, iterable: Any, info: Any, args: Any, filtering_args: Any, filterset_class: Any): ...
    def get_queryset_resolver(self): ...
