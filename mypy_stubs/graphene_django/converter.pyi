from .compat import ArrayField as ArrayField, HStoreField as HStoreField, JSONField as JSONField, RangeField as RangeField
from .fields import DjangoConnectionField as DjangoConnectionField, DjangoListField as DjangoListField
from .utils import import_single_dispatch as import_single_dispatch
from typing import Any, Optional

singledispatch: Any

def convert_choice_name(name: Any): ...
def get_choices(choices: Any) -> None: ...
def convert_choices_to_named_enum_with_descriptions(name: Any, choices: Any): ...
def convert_django_field_with_choices(field: Any, registry: Optional[Any] = ..., convert_choices_to_enum: bool = ...): ...
def convert_django_field(field: Any, registry: Optional[Any] = ...) -> None: ...
def convert_field_to_string(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_id(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_uuid(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_int(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_boolean(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_nullboolean(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_float(field: Any, registry: Optional[Any] = ...): ...
def convert_datetime_to_string(field: Any, registry: Optional[Any] = ...): ...
def convert_date_to_string(field: Any, registry: Optional[Any] = ...): ...
def convert_time_to_string(field: Any, registry: Optional[Any] = ...): ...
def convert_onetoone_field_to_djangomodel(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_list_or_connection(field: Any, registry: Optional[Any] = ...): ...
def convert_field_to_djangomodel(field: Any, registry: Optional[Any] = ...): ...
def convert_postgres_array_to_list(field: Any, registry: Optional[Any] = ...): ...
def convert_postgres_field_to_string(field: Any, registry: Optional[Any] = ...): ...
def convert_postgres_range_to_string(field: Any, registry: Optional[Any] = ...): ...
