from ..converter import convert_choices_to_named_enum_with_descriptions as convert_choices_to_named_enum_with_descriptions
from ..registry import get_global_registry as get_global_registry
from ..utils import import_single_dispatch as import_single_dispatch
from .types import DictType as DictType
from typing import Any

singledispatch: Any

def get_graphene_type_from_serializer_field(field: Any) -> None: ...
def convert_serializer_field(field: Any, is_input: bool = ...): ...
def convert_serializer_to_input_type(serializer_class: Any): ...
def convert_serializer_field_to_string(field: Any): ...
def convert_serializer_to_field(field: Any): ...
def convert_list_serializer_to_field(field: Any): ...
def convert_serializer_field_to_int(field: Any): ...
def convert_serializer_field_to_bool(field: Any): ...
def convert_serializer_field_to_float(field: Any): ...
def convert_serializer_field_to_datetime_time(field: Any): ...
def convert_serializer_field_to_date_time(field: Any): ...
def convert_serializer_field_to_time(field: Any): ...
def convert_serializer_field_to_list(field: Any, is_input: bool = ...): ...
def convert_serializer_field_to_dict(field: Any): ...
def convert_serializer_field_to_jsonstring(field: Any): ...
def convert_serializer_field_to_list_of_enum(field: Any): ...
def convert_serializer_field_to_enum(field: Any): ...
