from .compat import queue as queue
from threading import Thread
from typing import Any

class Worker(Thread):
    tasks_queue: Any = ...
    results_queue: Any = ...
    exceptions_queue: Any = ...
    daemon: bool = ...
    def __init__(self, tasks_queue: Any, results_queue: Any, exceptions_queue: Any) -> None: ...
    def run(self) -> None: ...

class ThreadPool:
    results_queue: Any = ...
    exceptions_queue: Any = ...
    tasks_queue: Any = ...
    num_threads: Any = ...
    def __init__(self, num_threads: Any) -> None: ...
    def add_task(self, func: Any, *args: Any, **kargs: Any) -> None: ...
    def start_parallel(self) -> None: ...
    def result(self): ...
