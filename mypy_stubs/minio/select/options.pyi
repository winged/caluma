from .helpers import SQL as SQL
from typing import Any, Optional

class CSVInput:
    FileHeaderInfo: Any = ...
    RecordDelimiter: Any = ...
    FieldDelimiter: Any = ...
    QuoteCharacter: Any = ...
    QuoteEscapeCharacter: Any = ...
    Comments: Any = ...
    AllowQuotedRecordDelimiter: Any = ...
    def __init__(self, FileHeaderInfo: Optional[Any] = ..., RecordDelimiter: str = ..., FieldDelimiter: str = ..., QuoteCharacter: str = ..., QuoteEscapeCharacter: str = ..., Comments: str = ..., AllowQuotedRecordDelimiter: bool = ...) -> None: ...

class JSONInput:
    Type: Any = ...
    def __init__(self, Type: Optional[Any] = ...) -> None: ...

class ParquetInput: ...

class InputSerialization:
    compression_type: Any = ...
    csv_input: Any = ...
    json_input: Any = ...
    parquet_input: Any = ...
    def __init__(self, compression_type: str = ..., csv: Optional[Any] = ..., json: Optional[Any] = ..., par: Optional[Any] = ...) -> None: ...

class CSVOutput:
    QuoteFields: Any = ...
    RecordDelimiter: Any = ...
    FieldDelimiter: Any = ...
    QuoteCharacter: Any = ...
    QuoteEscapeCharacter: Any = ...
    def __init__(self, QuoteFields: str = ..., RecordDelimiter: str = ..., FieldDelimiter: str = ..., QuoteCharacter: str = ..., QuoteEscapeCharacter: str = ...) -> None: ...

class JsonOutput:
    RecordDelimiter: Any = ...
    def __init__(self, RecordDelimiter: str = ...) -> None: ...

class OutputSerialization:
    csv_output: Any = ...
    json_output: Any = ...
    def __init__(self, csv: Optional[Any] = ..., json: Optional[Any] = ...) -> None: ...

class RequestProgress:
    enabled: Any = ...
    def __init__(self, enabled: bool = ...) -> None: ...

class SelectObjectOptions:
    expression_type: Any = ...
    expression: Any = ...
    in_ser: Any = ...
    out_ser: Any = ...
    req_progress: Any = ...
    def __init__(self, expression: Any, input_serialization: Any, output_serialization: Any, request_progress: Any) -> None: ...
