from .error import InvalidArgumentError as InvalidArgumentError
from .helpers import is_non_empty_string as is_non_empty_string, is_valid_bucket_name as is_valid_bucket_name
from typing import Any

class PostPolicy:
    policies: Any = ...
    form_data: Any = ...
    bucket_name: str = ...
    key: str = ...
    def __init__(self) -> None: ...
    def set_expires(self, time: Any) -> None: ...
    def set_key(self, key: Any) -> None: ...
    def set_key_startswith(self, key_startswith: Any) -> None: ...
    def set_bucket_name(self, bucket_name: Any) -> None: ...
    def set_content_type(self, content_type: Any) -> None: ...
    def set_content_length_range(self, min_length: Any, max_length: Any) -> None: ...
    def append_policy(self, condition: Any, target: Any, value: Any) -> None: ...
    def base64(self, extras: Any = ...): ...
    def is_valid(self) -> None: ...
